{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","usersResponse","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,G,MAAO,SAAAC,GAAK,OACtB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,2BAAqEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJbC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHlBO,G,MAAY,SAAC,GACzB,IAD0BC,EAC3B,EAD2BA,YAAaC,EACxC,EADwCA,aAErC,OAAS,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4BzEG,G,wDA3Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAa,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,+BAE3C,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAiBjB,EAASkB,QAAO,SAAAxB,GAAO,OAAIA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAClG,OACE,sBAAK3B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWW,YAAY,iBACvBC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WAC3D,cAAC,EAAD,CAAUvB,SAAUiB,W,GAtBVO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.45faef92.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n   <div className='card-container'>\r\n       <img src={`https://robohash.org/${props.monster.id}?set=set2& size=180X180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {\r\n    return <div className='card-list'>{\r\n        props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))\r\n    }</div>;\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>\r\n{\r\n   return ( <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n   )\r\n};","import React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(usersResponse => this.setState({ monsters: usersResponse }));\r\n  }\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Monster Rolodex </h1>\r\n        <SearchBox placeholder='search monster' \r\n        handleChange = {e => this.setState({searchField : e.target.value})}/>\r\n        <CardList monsters={filterMonsters}>\r\n        </CardList>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}